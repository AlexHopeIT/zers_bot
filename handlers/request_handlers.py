from aiogram import Bot, Router, types, F
from aiogram.fsm.context import FSMContext
from keyboards.inline_kbs import (
    main_menu_keyboard
    )
from states.states import LeaveARequestState
from create_db import Applications, AsyncSessionLocal
from config import CHAT_ID

request_router = Router()


@request_router.callback_query(F.data == 'leave_a_request')
async def start_request_process(
    callback: types.CallbackQuery, state: FSMContext
        ):
    await callback.answer()
    await callback.message.edit_text('–ö–∞–∫ –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?')
    await state.set_state(LeaveARequestState.waiting_for_name)


@request_router.message(LeaveARequestState.waiting_for_name)
async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
    await state.set_state(LeaveARequestState.waiting_for_phone)


@request_router.message(LeaveARequestState.waiting_for_phone)
async def process_phone(message: types.Message, state: FSMContext):
    # –î–æ–±–∞–≤—å –∑–¥–µ—Å—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    await state.update_data(phone=message.text)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –í–∞—à –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã')
    await state.set_state(LeaveARequestState.waiting_for_email)


@request_router.message(LeaveARequestState.waiting_for_email)
async def process_email(message: types.Message, state: FSMContext):
    await state.update_data(email=message.text)
    await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ, —Å –∫–∞–∫–æ–π —Ü–µ–ª—å—é –í—ã –æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –∑–∞—è–≤–∫—É')
    await state.set_state(LeaveARequestState.waiting_for_message)


@request_router.message(LeaveARequestState.waiting_for_message)
async def process_message(
    message: types.Message, state: FSMContext, bot: Bot
        ):
    await state.update_data(request_text=message.text)

    user_data = await state.get_data()
    name = user_data.get('name')
    phone = user_data.get('phone')
    email = user_data.get('email')
    request_text = user_data.get('request_text')

    async with AsyncSessionLocal() as db:
        new_application = Applications(
            name=name,
            phone=phone,
            email=email,
            message=request_text
        )
        db.add(new_application)
        await db.commit()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —á–∞—Ç
    admin_notification_text = (
        f"**üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!**\n\n"
        f"**–û—Ç –∫–æ–≥–æ:** {name}\n"
        f"**–¢–µ–ª–µ—Ñ–æ–Ω:** {phone}\n"
        f"**Email:** {email}\n\n"
        f"**–°–æ–æ–±—â–µ–Ω–∏–µ:**\n{request_text}"
    )

    await bot.send_message(
        chat_id=CHAT_ID,
        text=admin_notification_text,
        parse_mode="Markdown"
    )

    keyboard = await main_menu_keyboard()
    await message.answer(
        '‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏!',
        reply_markup=keyboard
        )

    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
